openapi: 3.0.0
info:
  title: Jobs Api
  description: Jobs API
  contact:
    name: Smith Ringtho
    email: sringtho@gmail.com
  version: '1.0'
servers:
- url: https://jobs-api-sringtho-0ed3ed541ed8.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: bob@gmail.com
                  password: secret
            example:
              email: bob@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  email: bob@gmail.com
                  name: Bob
                  password: secret
            example:
              email: bob@gmail.com
              name: Bob
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
      - Jobs
      summary: GET All Jobs
      operationId: GETAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs
      summary: POST job
      operationId: POSTjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/POSTjobRequest'
              - example:
                  company: Netflix
                  position: Intern
            example:
              company: Netflix
              position: Intern
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Job ID
    get:
      tags:
      - Jobs
      summary: GET Single Job
      operationId: GETSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  company: Microsoft Corporation
                  position: Senior Software Engineer
                  status: interview
            example:
              company: Microsoft Corporation
              position: Senior Software Engineer
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: bob@gmail.com
        password: secret
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - email
      - name
      - password
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
      example:
        email: bob@gmail.com
        name: Bob
        password: secret
    POSTjobRequest:
      title: POSTjobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Jiji Uganda
        position: Intern
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Microsoft Corporation
        position: Senior Software Engineer
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
- name: Jobs